// Example 1 - –ë–∞–∑–æ–≤—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó –∑ –º–∞—Å–∏–≤–æ–º
// - –°—Ç–≤–æ—Ä—ñ—Ç—å –º–∞—Å–∏–≤ genres –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ Jazz —ñ Blues.
// - –î–æ–¥–∞–π—Ç–µ "–†–æ–∫-–Ω-—Ä–æ–ª" –≤ –∫—ñ–Ω–µ—Ü—å.
// - –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É.
// - –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –æ—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É.
// –ö–æ–¥ –º–∞—î –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –º–∞—Å–∏–≤—É –¥–æ–≤—ñ–ª—å–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏.
// - –í–∏–¥–∞–ª—ñ—Ç—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç —ñ –≤–∏–≤–µ–¥—ñ—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
// - –í—Å—Ç–∞–≤—Ç–µ "Country" —ñ "Reggae" –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ –º–∞—Å–∏–≤—É.

/*
const genres = ['Jazz', 'Blues'];
genres.push('–†–æ–∫-–Ω-—Ä–æ–ª');

const lastIndex = genres.length - 1;

console.log(genres[0]);
console.log(genres[lastIndex]);

genres.shift();
console.log(genres[0]);

genres.unshift('Country', 'Reggae');
console.log(genres);
*/

// Example 2 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è
// –ü–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏,
// –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —É –∑–º—ñ–Ω–Ω—ñ–π values
// —è–∫ —Ä—è–¥–∫–∏.
// –ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–ø—É—Å–∫–æ–º.
// –î–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –ø–æ–º–Ω–æ–∂–∏—Ç–∏ —ó—Ö –æ–¥–Ω–µ –æ–¥–Ω–æ–≥–æ.
// S = a √ó b, –¥–µ S - –ø–ª–æ—â–∞; a, b - –î–æ–≤–∂–∏–Ω–∞ —ñ —à–∏—Ä–∏–Ω–∞.

/*
const values = '8 11';
const strToArray = values.split(" ");

const a = Number(strToArray[0]);
const b = Number(strToArray[1]);

const s = a * b;

console.log('S', s);
*/

// Example 3 - –ü–µ—Ä–µ–±—ñ—Ä –º–∞—Å–∏–≤—É
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É fruits —Ü–∏–∫–ª–æ–º for.
// –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –≤–∏–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫
// —É —Ñ–æ—Ä–º–∞—Ç—ñ –Ω–æ–º–µ—Ä_–µ–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–Ω—è_–µ–ª–µ–º–µ–Ω—Ç–∞:
// 1: üçé
// 2: üçá
// 3: üçë
// ...
// –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—î –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ –ø–µ—Ä—à–æ–≥–æ.

/*
const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã'];

for (let i = 0; i < fruits.length; i += 1){
  const number = i + 1;
  console.log(`${number}: ${fruits[i]}`);
}
*/

/*
const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã'];

fruits.forEach((value, idx, arr) => {
  const number = idx + 1;
  console.log(`${number}: ${value}`);
})
*/

// Example 4 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ü–∏–∫–ª–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å
// –Ü–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
// Jacob - 89001234567
// William - 89001112233
// ...
// –£ –∑–º—ñ–Ω–Ω–∏—Ö names —Ç–∞ phones –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è
// –†—è–¥–∫–∏ —ñ–º–µ–Ω —ñ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤, —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏.
// –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö
// –í–∫–∞–∑—É—é—Ç—å –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤
// –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–µ.

/*
const names = 'Jacob,William,Solomon,Artemis';
const phones = '89001234567,89001112233,890055566377,890055566300';

const namesArr = names.split(',');
const phonesArr = phones.split(',');

for (let i = 0; i < namesArr.length; i += 1){
  console.log(`${namesArr[i]} - ${phonesArr[i]}`);
}
*/

// Example 5 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —É—Å—ñ —Å–ª–æ–≤–∞ —Ä—è–¥–∫–∞
// –ö—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ —Ç–∞ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ.
// –†–µ–∑—É–ª—å—Ç—É—é—á–∏–π —Ä—è–¥–æ–∫ –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è
// —á–∏ –∑–∞–∫—ñ–Ω—á—É–≤–∞—Ç–∏—Å—è –ø—Ä–æ–±–µ–ª—å–Ω–∏–º —Å–∏–º–≤–æ–ª–æ–º.
// –°–∫—Ä–∏–ø—Ç –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ —Ä—è–¥–∫–∞.

/*
const string = 'Welcome to the future';

const stringArr = string.split(" ");
const first = stringArr.shift();
const last = stringArr.pop();

const newString = stringArr.join(' ');
console.log(newString);
console.log(`"${newString}"`);
*/

// Example 6 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π ¬´—Ä–æ–∑–≥–æ—Ä—Ç–∞—î¬ª —Ä—è–¥–æ–∫
// (–ó–≤–æ—Ä–æ—Ç–Ω–∏–π –ø–æ—Ä—è–¥–æ–∫ –±—É–∫–≤) —ñ –≤–∏–≤–æ–¥–∏—Ç—å —ó—ó –≤ –∫–æ–Ω—Å–æ–ª—å.

/*
const string = 'Welcome to the future';
const strArr = string.split('');
const reversedArr = strArr.reverse();
const newString = reversedArr.join('');

console.log(newString);
*/

// -------------------------

/*
const string = 'Welcome to the future';
const strArr = string.split('');

let result = '';
for (let i = strArr.length - 1; i >= 0; i -= 1){
  result += strArr[i];
}

console.log(result);
*/

// -------------------------

/*
const string = 'Welcome to the future';
const reverse = string.split('').reverse().join('');

console.log(reverse);
*/

// Example 7 - –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É –∑ —Ü–∏–∫–ª–æ–º
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É —Ä—è–¥–∫—ñ–≤
// –≤ –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É –∑–∞ –ø–µ—Ä—à–æ—é –ª—ñ—Ç–µ—Ä–æ—é –µ–ª–µ–º–µ–Ω—Ç–∞.

/*
const langs = ['python', 'javascript', 'c++', 'haskel', 'php', 'ruby'];

for (let i = 0; i < langs.length; i += 1) {
  for (let j = i + 1; j < langs.length; j += 1) {
    console.log(langs[i], langs[j]);

    if (langs[i][0] > langs[j][0]) {
       const tmp = langs[i];
    langs[i] = langs[j];
    langs[j] = tmp;
    }
  }
}

console.log(langs);
*/

// Example 8 - –ü–æ—à—É–∫ –µ–ª–µ–º–µ–Ω—Ç–∞
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ—à—É–∫—É –Ω–∞–π–º–µ–Ω—à–æ–≥–æ —á–∏—Å–ª–∞ —É –º–∞—Å–∏–≤—ñ.
// –ö–æ–¥ –º–∞—î –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ –º–∞—Å–∏–≤—É —á–∏—Å–µ–ª.
// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü–∏–∫–ª –Ω–∞ –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è.

/*
const numbers = [2, 17, 94, 1, 23, 37];
let min = numbers[0];
let max = numbers[0];

for (const number of numbers) {
  if (number < min) {
    min = number;
  }

  if (number > max) {
    max = number;
  }
}

console.log(min); // 1
console.log(max); // 94
*/

// extra - –∑—Ä–æ–±–∏—Ç–∏ —Ä–µ–≤–µ—Ä—Å –∫–æ–∂–Ω–æ–≥–æ —Å–ª–æ–≤–∞ –Ω–µ –∑–º—ñ–Ω—é—é—á–∏ –ø–æ—Ä—è–¥–æ–∫ —Å–ª—ñ–≤
// 1. —Ä–æ–∑–±–∏—Ç–∏ –º–∞—Å–∏–≤ —Å–ª—ñ–≤
// 2.1 —Ä–æ–∑–±–∏—Ç–∏ –∫–æ–∂–Ω–µ —Å–ª–æ–≤–æ –º–∞—Å–∏–≤ —Å–∏–º–≤–æ–ª—ñ–≤
// 2.2 —Ä–µ–≤–µ—Ä—Å–Ω—É—Ç–∏
// 2.3 –∑—ñ–±—Ä–∞—Ç–∏ —Å–ª–æ–≤–æ –≤ –æ–¥–∏–Ω —Ä—è–¥–æ–∫
// 3. –∑—ñ–±—Ä–∞—Ç–∏ —Ç–µ–∫—Å—Ç —ñ–∑ –º–∞—Å–∏–≤—É —Å–ª—ñ–≤

const string = 'Welcome to the future';

